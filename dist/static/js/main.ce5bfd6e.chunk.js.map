{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","then","type","logout","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","toString","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getStatem","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.ce5bfd6e.chunk.js","sourcesContent":["import React, { Profiler } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li>\r\n          <NavLink to=\"/create\">New Project</NavLink>\r\n        </li>\r\n        <li>\r\n          <a onClick={props.signOut}>Log Out</a>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n    firebase.logout(); // Fixed the problem, but is this needed?\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getStatem, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"SIGNUP_ERROR\",\r\n          err,\r\n        });\r\n      });\r\n  };\r\n};\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  //onsole.log(auth);\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left\">\r\n          Articles\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate().toString()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\" card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\"> Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport Notifications from \"./Notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 5, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>\r\n              {moment(project.createdAt.toDate().toString()).calendar()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/NavBar\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport CreateProject from \"./components/projects/CreateProject\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/project/:id\" component={ProjectDetails} />\r\n            <Route path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/create\" component={CreateProject} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"create project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n// the key name will be the data property on the state object\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Replace this with your own config details\r\nvar config = {\r\n  apiKey: \"AIzaSyDBM5PZsX7fr2ZThC8jbCUsauZGxz1C7s8\",\r\n  authDomain: \"react-redux-firebase-7519f.firebaseapp.com\",\r\n  databaseURL: \"https://react-redux-firebase-7519f.firebaseio.com\",\r\n  projectId: \"react-redux-firebase-7519f\",\r\n  storageBucket: \"react-redux-firebase-7519f.appspot.com\",\r\n  messagingSenderId: \"476084195703\",\r\n  appId: \"1:476084195703:web:b97e37d9b2b464e9709172\",\r\n  measurementId: \"G-CE71VR3V9Y\",\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./config/fbConfig\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig),\r\n    reactReduxFirebase(fbConfig, {\r\n      useFirestoreForProfile: true,\r\n      userProfile: \"users\",\r\n      attachAuthIsReady: true,\r\n    })\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n  registerServiceWorker();\r\n});\r\n"],"sourceRoot":""}